"""Initial migration

Revision ID: dba21c87a841
Revises: 
Create Date: 2024-09-10 13:57:19.467145

"""
from typing import Sequence, Union

import datetime
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = 'dba21c87a841'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### Enums ###
    user_role_enum = sa.Enum('USER', 'ADMIN', 'MODERATOR', name='userrole', create_type=False)
    debate_type_enum = sa.Enum('GLOBAL', 'INTERNATIONAL', 'NATIONAL', 'SUBNATIONAL', 'SUBDIVISION', name='debatetype', create_type=False)
    debate_status_enum = sa.Enum('OPEN', 'PENDING', 'CLOSED', 'REJECTED', 'ARCHIVED', 'RESOLVED', name='debatestatus', create_type=False)
    language_code_enum = sa.Enum('EN', 'ES', 'FR', name='languagecode', create_type=False)
    poll_type_enum = sa.Enum('BINARY', 'SINGLE_CHOICE', 'MULTIPLE_CHOICE', name='polltype', create_type=False)
    poll_status_enum = sa.Enum('ACTIVE', 'CLOSED', 'DRAFT', name='pollstatus', create_type=False)
    reaction_type_enum = sa.Enum('LIKE', 'DISLIKE', name='reactiontype', create_type=False)

    # ### Commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('provider', sa.String(), nullable=False),
        sa.Column('provider_account_id', sa.String(), nullable=False),
        sa.Column('refresh_token', sa.String(), nullable=True),
        sa.Column('access_token', sa.String(), nullable=True),
        sa.Column('expires_at', sa.Integer(), nullable=True),
        sa.Column('token_type', sa.String(), nullable=True),
        sa.Column('scope', sa.String(), nullable=True),
        sa.Column('id_token', sa.String(), nullable=True),
        sa.Column('session_state', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('communities',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('type', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['parent_id'], ['communities.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'globalcommunity',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
    )
    op.create_table(
        'continent',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('global_community_id', sa.Integer(), sa.ForeignKey('globalcommunity.id'), nullable=True),
    )
    op.create_index(op.f('ix_continent_name'), 'continent', ['name'], unique=False)
    op.create_table('country',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('area', sa.Float(), nullable=True),
        sa.Column('borders', sa.String(), nullable=True),
        sa.Column('capital_latlng', sa.String(), nullable=True),
        sa.Column('capital', sa.String(), nullable=True),
        sa.Column('cca2', sa.String(), nullable=True),
        sa.Column('cca3', sa.String(), nullable=True),
        sa.Column('coat_of_arms_svg', sa.String(), nullable=True),
        sa.Column('continent_id', sa.Integer(), sa.ForeignKey('continent.id'), nullable=True),
        sa.Column('continent', sa.String(), nullable=True),
        sa.Column('currency_code', sa.String(), nullable=True),
        sa.Column('currency_name', sa.String(), nullable=True),
        sa.Column('flag', sa.String(), nullable=True),
        sa.Column('google_maps_link', sa.String(), nullable=True),
        sa.Column('idd_root', sa.String(), nullable=True),
        sa.Column('idd_suffixes', sa.String(), nullable=True),
        sa.Column('landlocked', sa.Boolean(), nullable=True),
        sa.Column('languages', sa.String(), nullable=True),
        sa.Column('native_name', sa.String(), nullable=True),
        sa.Column('numeric_code', sa.String(), nullable=True),
        sa.Column('openstreet_maps_link', sa.String(), nullable=True),
        sa.Column('population', sa.BigInteger(), nullable=True),
        sa.Column('region', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('subregion', sa.String(), nullable=True),
        sa.Column('timezone', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_cca2'), 'country', ['cca2'], unique=False)
    op.create_index(op.f('ix_country_cca3'), 'country', ['cca3'], unique=False)
    op.create_index(op.f('ix_country_name'), 'country', ['name'], unique=False)
    op.create_table('tag',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subnation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('area', sa.Float(), nullable=True),
        sa.Column('population', sa.BigInteger(), nullable=True),
        sa.Column('borders', sa.String(), nullable=True),
        sa.Column('capital', sa.String(), nullable=True),
        sa.Column('flag', sa.String(), nullable=True),
        sa.Column('iso_code', sa.String(), nullable=True),
        sa.Column('timezone', sa.String(), nullable=True),
        sa.Column('famous_landmark', sa.String(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subnation_name'), 'subnation', ['name'], unique=False)
    op.create_table('subdivision',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('subnation_id', sa.Integer(), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.Column('area', sa.Float(), nullable=True),
        sa.Column('population', sa.BigInteger(), nullable=True),
        sa.Column('borders', sa.String(), nullable=True),
        sa.Column('iso_code', sa.String(), nullable=True),
        sa.Column('timezone', sa.String(), nullable=True),
        sa.Column('famous_landmark', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['subnation_id'], ['subnation.id'], ),
        sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('email', sa.String(length=100), nullable=False),
        sa.Column('emailVerified', sa.DateTime(), nullable=True),
        sa.Column('image', sa.String(), nullable=True),
        sa.Column('birthdate', sa.DateTime(), nullable=True),
        sa.Column('gender', sa.String(length=20), nullable=True),
        sa.Column('isActive', sa.Boolean(), nullable=True),
        sa.Column('role', user_role_enum, nullable=True),
        sa.Column('username', sa.String(length=50), nullable=True),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username'),
        sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_table('debate',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('type', debate_type_enum, nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('slug', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('public', sa.Boolean(), nullable=False, default=True),
        sa.Column('status', debate_status_enum, nullable=False, default='OPEN'),
        sa.Column('views_count', sa.BigInteger(), nullable=False, default=0),
        sa.Column('likes_count', sa.BigInteger(), nullable=False, default=0),
        sa.Column('dislikes_count', sa.BigInteger(), nullable=False, default=0),
        sa.Column('language', language_code_enum, nullable=True, default='EN'),
        sa.Column('images', sa.JSON(), nullable=False, default=[]),
        sa.Column('creator_id', sa.Integer(), nullable=False),
        sa.Column('approved_by_id', sa.Integer(), nullable=True),
        sa.Column('rejected_by_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('approved_at', sa.DateTime(), nullable=True),
        sa.Column('rejected_at', sa.DateTime(), nullable=True),
        sa.Column('moderation_notes', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['rejected_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_debate_title'), 'debate', ['title'], unique=False)
    op.create_index(op.f('ix_debate_slug'), 'debate', ['slug'], unique=True)
    op.create_table('usercommunitylink',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('community_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('user_id', 'community_id')
    )
    op.create_table('debatecountryinvolvedlink',
        sa.Column('debate_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
        sa.ForeignKeyConstraint(['debate_id'], ['debate.id'], ),
        sa.PrimaryKeyConstraint('debate_id', 'country_id')
    )
    op.create_table('debatesubnationinvolvedlink',
        sa.Column('debate_id', sa.Integer(), nullable=False),
        sa.Column('subnation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['debate_id'], ['debate.id'], ),
        sa.ForeignKeyConstraint(['subnation_id'], ['subnation.id'], ),
        sa.PrimaryKeyConstraint('debate_id', 'subnation_id')
    )
    op.create_table('debatetaglink',
        sa.Column('debate_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['debate_id'], ['debate.id'], ),
        sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
        sa.PrimaryKeyConstraint('debate_id', 'tag_id')
    )
    op.create_table('pointofview',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('debate_id', sa.Integer(), nullable=False),
        sa.Column('country_id', sa.Integer(), nullable=True),
        sa.Column('subnation_id', sa.Integer(), nullable=True),
        sa.Column('subdivision_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('created_by_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['debate_id'], ['debate.id'], ),
        sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
        sa.ForeignKeyConstraint(['subnation_id'], ['subnation.id'], ),
        sa.ForeignKeyConstraint(['subdivision_id'], ['subdivision.id'], ),
        sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('debate_id', 'country_id', 'subnation_id', 'subdivision_id', name='uix_pov_debate_location')
    )
    op.create_table('opinion',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('content', sa.String(length=5000), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('point_of_view_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['point_of_view_id'], ['pointofview.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('point_of_view_id', 'user_id', name='uix_pov_user')
    )
    op.create_table('opinionvote',
        sa.Column('id', sa.Integer(), primary_key=True, nullable=False),
        sa.Column('opinion_id', sa.Integer(), sa.ForeignKey('opinion.id'), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('value', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.UniqueConstraint('opinion_id', 'user_id', name='uix_opinionvote_opinion_user')
    )
    op.create_index('ix_opinionvote_opinion_id', 'opinionvote', ['opinion_id'], unique=False)
    op.create_index('ix_opinionvote_user_id', 'opinionvote', ['user_id'], unique=False)
    op.create_table('debatechangelog',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('debate_id', sa.Integer(), nullable=False),
        sa.Column('changed_by_id', sa.Integer(), nullable=False),
        sa.Column('changed_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('field_changed', sa.String(), nullable=False),
        sa.Column('old_value', sa.Text(), nullable=True),
        sa.Column('new_value', sa.Text(), nullable=True),
        sa.Column('reason', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['debate_id'], ['debate.id'], ),
        sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'poll',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('poll_type', poll_type_enum, nullable=False),
        sa.Column('is_anonymous', sa.Boolean(), nullable=False, server_default=sa.text('true')),
        sa.Column('ends_at', sa.DateTime(), nullable=True),
        sa.Column('slug', sa.String(), nullable=False),
        sa.Column('creator_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('community_id', sa.Integer(), sa.ForeignKey('communities.id'), nullable=False),
        sa.Column('status', poll_status_enum, nullable=False, server_default='ACTIVE'),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.UniqueConstraint('slug', name='uq_polls_slug'),
    )
    op.create_index(op.f('ix_polls_slug'), 'polls', ['slug'], unique=True)

    op.create_table(
        'poll_options',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('text', sa.String(), nullable=False),
        sa.Column('votes', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('poll_id', sa.Integer(), sa.ForeignKey('poll.id'), nullable=False),
    )

    op.create_table(
        'votes',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('poll_id', sa.Integer(), sa.ForeignKey('poll.id'), nullable=False),
        sa.Column('option_id', sa.Integer(), sa.ForeignKey('poll_options.id'), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('voted_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
    )

    # Tabla 'poll_reactions'
    op.create_table(
        'poll_reactions',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('poll_id', sa.Integer(), sa.ForeignKey('poll.id'), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('reaction_type', reaction_type_enum, nullable=False),
        sa.Column('reacted_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
    )

    # Tabla 'poll_comments'
    op.create_table(
        'poll_comments',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('poll_id', sa.Integer(), sa.ForeignKey('poll.id'), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### Commands to reverse the upgrade ###
    op.drop_table('debatechangelog')
    op.drop_table('opinion')
    op.drop_table('pointofview')
    op.drop_table('debatetaglink')
    op.drop_table('debatesubnationinvolvedlink')
    op.drop_table('debatecountryinvolvedlink')
    op.drop_table('usercommunitylink')
    op.drop_index(op.f('ix_debate_title'), table_name='debate')
    op.drop_index(op.f('ix_debate_slug'), table_name='debate')
    op.drop_table('debate')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_subnation_name'), table_name='subnation')
    op.drop_table('subdivision')
    op.drop_table('subnation')
    op.drop_table('tag')
    op.drop_index(op.f('ix_country_name'), table_name='country')
    op.drop_index(op.f('ix_country_cca3'), table_name='country')
    op.drop_index(op.f('ix_country_cca2'), table_name='country')
    op.drop_table('country')
    op.drop_table('community')
    op.drop_table('accounts')
    op.drop_table('votes')
    op.drop_table('poll_options')
    op.drop_index(op.f('ix_polls_slug'), table_name='polls')
    op.drop_table('polls')
    op.drop_column('country', 'continent_id')
    op.drop_index(op.f('ix_continent_name'), table_name='continent')
    op.drop_table('continent')
    op.drop_table('globalcommunity')
    op.drop_table('poll_comments')
    op.drop_table('poll_reactions')
    op.drop_index('ix_opinionvote_user_id', table_name='opinionvote')
    op.drop_index('ix_opinionvote_opinion_id', table_name='opinionvote')
    op.drop_table('opinionvote')

    # Drop Enums
    sa.Enum(name='userrole').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='debatetype').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='debatestatus').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='languagecode').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='polltype').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='pollstatus').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='reactiontype').drop(op.get_bind(), checkfirst=True)
